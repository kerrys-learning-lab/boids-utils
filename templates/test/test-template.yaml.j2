---
apiVersion: v1
kind: Service
metadata:
  namespace: boids
  name: engine-{{ uuid }}
  labels:
    {% for key, value in labels.items() %}
    {{ key }}: {{ value }}
    {% endfor %}
spec:
  selector:
    role: engine
  ports:
    - port: 9090
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: boids
  name: engine-{{ uuid }}-deployment
  labels:
    {% for key, value in labels.items() %}
    {{ key }}: {{ value }}
    {% endfor %}
spec:
  selector:
    matchLabels:
      role: engine
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        role: engine
        {% for key, value in labels.items() %}
        {{ key }}: {{ value }}
        {% endfor %}
    spec:
      containers:
        - name: engine-{{ uuid }}
          image: "{{ image_spec }}"
          imagePullPolicy: IfNotPresent
          args:
            - {{ uuid }}
          ports:
            - name: http
              containerPort: 9000
              protocol: TCP
      volumes:
        - name: auto-config-maps
          configMap:
            name: auto-config-maps
        - name: podinfo
          downwardAPI:
            items:
              - path: labels
                fieldRef:
                  fieldPath: metadata.labels
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: engine-{{ uuid }}
  namespace: boids
  labels:
    {% for key, value in labels.items() %}
    {{ key }}: {{ value }}
    {% endfor %}
spec:
  ingressClassName: nginx
  rules:
    - http:
        paths:
          - pathType: Prefix
            path: /api/v1/session/{{ uuid }}
            backend:
              service:
                name: engine-{{ uuid }}
                port:
                  name: http
